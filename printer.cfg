##########################################################################################
# !Acqua 3D Printer
# printer_size: 130*130*120
# This file contains pin mappings for the Escrich Acqua 3D Printer, Klipper version
# with a BTT SKR Pico V1.0 board. holding a MCU RP2040 microcontroller
# For the present version, the second processor it's a BTT-Pi V1 board
# and there is another MCU for CAN bus, using a EBB 42 CAN V1.2 adapter board, 
# and a small BTT U2C V1.0 mini board, directly plugged on the BTT Pi
# This is the Escrich printer.cfg file, 20250127
##########################################################################################

# **********************************************************************************
# Definición de la Impresora Acqua
# **********************************************************************************

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1800
max_z_velocity: 25
max_z_accel: 30


# **********************************************************************************
# Mainsail y Fluidd
# **********************************************************************************

#[include mainsail.cfg]

#[include fluidd.cfg]


# **********************************************************************************************
# Macros, including folders, Cualquier fichero que haya dentro de esas carpetas, queda incluido
# **********************************************************************************************

[include ./macros/*.*]  # Incluye todo lo que haya en el directorio de macros

[include ./macros_gcodes/*.*]  # Incluye todo lo que haya en el directorio de macro_gcodes

[include ./leds/*.*]  # Incluye todo lo que haya en el directorio de leds

[include ./pi_peripherals/*.*]  # Incluye todo lo que haya en el directorio para perifericos conectados a la Pi

[include ./can_bus/*.*]  # Incluye todo lo que haya en el directorio de hardware CAN Bus

#[include ./wip/*.*]  # Incluye todo lo que haya en el directorio wip usado para pruebas

[delayed_gcode Arranque]  # Carga el fichero de variables globales que luego se usarán para todos los procesos
gcode:
    M80 # Gcode de conexión de alimentación, nos aseguramos del estado del pin que apaga la alimentación ####### VOLVER A ACTIVAR ########
    beep
    var_globals
    M400 # Pausa hasta que todas las acciones pendientes se completan
    _led_atencion
    _led_cyan_suave
    M400

initial_duration: 1

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT


# **********************************************************************************
# Ajustes diversos, necesarios para el funcionamiento
# **********************************************************************************

[exclude_object]

[print_stats]

[pause_resume]
recover_velocity: 50.0

[display_status]

[gcode_arcs]
resolution: 0.1

[idle_timeout] # El time out de 30 minutos, se usa a través del gcode M81, para apagar la impresora y el ordenador
timeout: 1800

[respond]
# default_type: echo
default_type: command
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

# **********************************************************************************
# Comunicación serie
# **********************************************************************************

[mcu]  # Conexión para BTT-Pi o BTT CB1, no hay diferencia entre ambas
# serial: /dev/serial/by-id/usb-Klipper_rp2040_E66094A027854422-if00
#serial: /dev/ttyAMA0
serial: /dev/ttyS0
restart_method: command
baud: 115200
# Communication interface = Serial (on USART2 PD6(RX2)/PD5(TX2))
#baud: 250000
#   The baud rate to use. The default is 250000.


#    Klipper Firmware Configuration for BTT SKR Pico board
# [*] Enable extra low-level configuration options
#     Micro-controller Architecture (Raspberry Pi RP2040/RP235x)  --->
#     Processor model (rp2040)  --->
#     Bootloader offset (No bootloader)  --->
#     Flash chip (W25Q080 with CLKDIV 2)  --->
#     Communication Interface (UART0 on GPIO0/GPIO1)  --->
# (115200) Baud rate for serial port
# ()  GPIO pins to set at micro-controller startup

# Resultado:
# Creating uf2 file out/klipper.uf2
# [OK] Firmware successfully built!
# [OK] Firmware file located in '/home/biqu/klipper/out'!

# Pico Board serial comunications
# gpio0 TXD0
# gpio1 RXD0

# El fichero resultante se llama klipper.uf2, copiarlo al pc
# Conectar en la Pico, los puentes de BOOT, y USB Power,
# conectar al PC con un cable usb, y pulsar RESET, ahora estás en BURN Mode
# en el PC te aparecerá un nurvo disco, que es la Pico, con el nombre de Raspberry
# en el drive que te ha aparecido, pon el fichero klipper.uf2
# desconecta el cable USB, quita los puentes y arranca normalmente
# la propia SKR Pico usará ese fichero para programar su firmware
# el primer arranque tomará algo mas de tiempo
# a partir de ahí, si no te has equivocado en ningún paso,
# funcionará todo de manera normal, y habrás flasheado con el nuevo firmware tu BTT SKR Pico


# [mcu EBBCan] # Direccion del bus CAN, datos reales Acqua
# canbus_uuid=fc6c15e7be3a


# **********************************************************************************
# Eje x
# **********************************************************************************

[stepper_x]
step_pin: gpio11
dir_pin: !gpio10
enable_pin: !gpio12
microsteps: 16
rotation_distance: 32
#endstop_pin: ^gpio4
endstop_pin: tmc2209_stepper_x:virtual_endstop
# homing_retract_dist: 0
position_endstop: 0
position_min: 0 #-2
position_max: 130
homing_speed: 15 # 20 # 10 # 7.5 # 40
homing_retract_dist: 0.0 # 10.0

# **********************************************************************************
# Eje Y
# **********************************************************************************

[stepper_y]
step_pin: gpio6
dir_pin: !gpio5
enable_pin: !gpio7
microsteps: 16
rotation_distance: 32
#endstop_pin: ^gpio3
endstop_pin: tmc2209_stepper_y:virtual_endstop
# homing_retract_dist: 0
position_endstop: 0
position_min: -2
position_max: 135
homing_speed: 15 # 20 # 7.5 # 40
homing_retract_dist: 1.0 # 10.0


# **********************************************************************************
# Eje Z
# **********************************************************************************

[stepper_z]
step_pin: gpio19
dir_pin: !gpio28
enable_pin: !gpio2
microsteps: 16
rotation_distance: 8
#endstop_pin: ^gpio25    # desactivar estas lineas si se usa sonda, dejarlas para micro
#position_endstop: 0    # desactivar estas lineas si se usa sonda, dejarlas para micro
endstop_pin: probe:z_virtual_endstop     # Activar esta linea si se usa sonda, desactivarlas para micro # 20250206
position_min: -3.0
position_max: 120
homing_speed: 12


# **********************************************************************************
# Cama caliente
# **********************************************************************************

[heater_bed]
heater_pin: gpio21
sensor_type: Generic 3950
sensor_pin: gpio26
#control: pid
#pid_Kp: 66.045
#pid_Ki: 2.107
#pid_Kd: 517.628
min_temp: 0
max_temp: 130


# **********************************************************************************
# Ventiladores
# **********************************************************************************

[temperature_fan Alimentacion] # Ventilador fuente de alimentacion # 20250209
pin: gpio20 # FAN3
sensor_pin: gpio27
sensor_type:  ATC Semitec 104GT-2 # Sensor de Temperatura NTC conectado sobre la fuente de alimentación principal, contrastado con pirometro externo # 20250227
target_temp: 35.0 # 33.0 # 35.0 # 32.5 # 35.0 # 20250227
max_temp: 47.5 # 50 # Temperatura de disparo ajustada despues de mejorar la ventilación de la fuente de alimentación # 20250226
min_temp: 5
max_power: 1.00 # 0.75 # Limite de potencia para bajar el ruido # 20240614
control: pid # NO watermark
pid_kp: 10.0 # 5.0 # 2.0 # 1.0
pid_ki: 1.0 # 0.5
pid_kd: 0.5 # 2.0
off_below: 0.1 # Mantener apagado si la potencia aplicada está por debajo de este valor
min_speed: 0.15 # Por defecto la velocidad minima es 0.3 # 20250228


[temperature_fan SKR_Pico_CPU] # Ventilador fuente de alimentacion # 20250209
pin: gpio17 # FAN1
sensor_type:  temperature_mcu # Usando el sensor de temperatura interno de la SKR Pico, para regular su propio ventilador de refrigeración
target_temp: 40.0
max_temp: 60
min_temp: 5
max_power: 1.00 # 0.75 # Limite de potencia para bajar el ruido # 20240614
#stepper: stepper_y, stepper_x, extruder #, stepper_z, stepper_z1
control: pid # NO watermark
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0
off_below: 0.1 # Mantener apagado si la potencia aplicada está por debajo de este valor
min_speed: 0.15 # Por defecto la velocidad minima es 0.3 # 20250228


#   Sensor types:
#   One of "EPCOS 100K B57560G104F", "ATC Semitec 104GT-2",
#   "ATC Semitec 104NT-4-R025H42G", "Generic 3950",
#   "Honeywell 100K 135-104LAG-J01", "NTC 100K MGB18-104F39050L32",
#   "SliceEngineering 450", or "TDK NTCG104LH104JT1"


#[heater_fan hotend_fan]
#pin: gpio18
#heater: extruder
#heater_temp: 50.0

# [heater_fan controller_fan]
# pin: gpio20
# heater: heater_bed
# heater_temp: 45.0


# **********************************************************************************
# Sensores
# **********************************************************************************

[temperature_sensor EBBCan_CPU]  # Temperatura interna del procesador del toolhead CAN Bus EBB42 proporcionada por el propio microcontrolador
sensor_type: temperature_mcu
sensor_mcu: EBBCan

# [temperature_sensor SKR_Pico_CPU]  # Temperatura interna del procesador de la tarjeta SKR Pico proporcionada por el propio microcontrolador
# sensor_type: temperature_mcu

# [temperature_sensor BTT-Pi_Temp]  # Temperatura interna del procesador de la BTT Pi, no necesario porque ya aparece controlando el ventilador
# sensor_type: temperature_host
# sensor_path: /sys/class/thermal/thermal_zone0/temp
# #   The path to temperature system file. The default is
# #   "/sys/class/thermal/thermal_zone0/temp" which is the temperature
# #   system file on a Raspberry Pi computer.

# **********************************************************************************
# Superpinda y BlTouch
# **********************************************************************************

#[bltouch]
#sensor_pin: ^EBBCan:PB8
#control_pin: EBBCan:PB9

[probe]
pin: ^EBBCan:PB6 # Superpinda sensor Peperl+Fuchs 5V, NPN, 2'5 mm., Conectado por Can Bus 20250205
x_offset: -21.0 # 20250206
y_offset: 1.150 # 1.0 # 20250206
# z_offset: 1.25 # 1.20 # 1.0 # 1.35 # Originalmente 1.6 era demasiado bajo, se sube el Z-offset 0.1 mm. y queda en 1.5, cambiada la boquilla, cambiar a 1.35 # 20241105
# para subir la boquilla el numero disminuye, para bajarla aumenta
# Chequear Posicion de la punta del sensor 1 mm., con la boquilla a 0 mm. de altura sobre la base 
# En este caso el sensor se monta a 0.8 mm. de la superficie, usando la plantilla diseñada para el ajuste
# los cambios y la propia sensibilidad del sensor, obligan a hacer otros cambios, por ejemplo:
# dejar el Z_min a -2, por la propia inclinación de la mesa hasta que el sistema la corrige
# aumentar sa altura entre prueba y prueba al hacer la malla, ya que si no, el sensor no deja de leer al subir y da error.
# 20240610

# Z_offset con boquilla original de aleación : 1.50 ; Flujo aproximado 22 mm3/s, tanto en PETG como en PLA, boquilla de 0.4 mm. # 20240620
# Z_offset con boquilla Vulcano CHT Latón : 1.35; Flujo aproximado 24 mm3/s, tanto en PETG como en PLA, boquilla de 0.4 mm. # 20240620

# Sobre el plano del diseño offset x-21  y +1

# Pull Up ^
# Pull Down ~
# Invertir pin !
# Pin negado Pull Down ~!PB7
# Pin negado Pull Up ^!PB7

# Sensor Superpinda montado en maquinas Prusa:
# Peperl+Fuchs
# NBN2,5-8GM35-E1-Y
# Part No.70120760
# 5185-03164087110280859

# Normalmente cerrado NPN
# Marron +
# Negro OUT
# Azul   -

# Resistencia entre la entrada de señal y el positivo en sensores NPN, (BTT Octopus)
# 4K7 para 24 Voltios, a 5 Voltios funciona bien con 1K
# No es necesaria esta resistencia en sensores PNP
# No necesita esta resistencia en Can Bus EBB42 adapter


# **********************************************************************************
# Bed leveling
# **********************************************************************************

[bed_mesh]
mesh_min: 0,5 # Ajustado 20250208
mesh_max: 105,130 # Ajustado 20250208
probe_count: 4,4 # 3,3 # 5,5 # 5,5 # 6,6 # 3,3 # 20250209
fade_start: 0.0 # En caso de no especificarlo, la corrección, por defecto, empieza despues de 1 mm. imprimiendo 20230604
fade_end: 10.0
horizontal_move_z: 7 # 6 # No disminuir, error ya que el sensor no deja de leer entre prueba y prueba # 20240610
speed: 200 # 150 # The speed (in mm/s) of non-probing moves during the calibration. # 20240624


# **********************************************************************************
# Safe homing
# **********************************************************************************

[safe_z_home]
home_xy_position: 65,65 # Ajustado 20240527
speed: 50
z_hop: 10
z_hop_speed: 5


# **********************************************************************************
# Drivers
# **********************************************************************************

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 0.75 #0.6 #0.8
#hold_current: 0.4 # 0.6
stealthchop_threshold: 999999
diag_pin: ^gpio4
driver_SGTHRS: 12 #9 # 10 # 23 #27 # 25 # Con 20 rebota pero lo da por bueno, ojo ha habido que bajarlomucho despues de la compensacion de resonancias

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 0.75 # 0.6 #0.8
#hold_current: 0.4 # 0.6
stealthchop_threshold: 999999
diag_pin: ^gpio3
driver_SGTHRS: 22 # 18 # 15 # 13 # 14 # 15 #16 # 18 # 20 # 100

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.047500, -0.000000, -0.005000, 0.052500
#*# 	0.005000, 0.052500, 0.002500, 0.047500
#*# 	-0.007500, -0.000000, -0.025000, 0.050000
#*# 	0.032500, 0.047500, -0.062500, -0.055000
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 0.0
#*# max_x = 105.0
#*# min_y = 5.0
#*# max_y = 129.98
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.092
#*# pid_ki = 1.030
#*# pid_kd = 118.470
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 66.045
#*# pid_ki = 2.107
#*# pid_kd = 517.628
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 55.2
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 40.8
#*#
#*# [probe]
#*# z_offset = 1.30
